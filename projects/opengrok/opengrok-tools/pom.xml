<?xml version="1.0" encoding="UTF-8"?>
<!--

CDDL HEADER START

The contents of this file are subject to the terms of the
Common Development and Distribution License (the "License").
You may not use this file except in compliance with the License.

See LICENSE.txt included in this distribution for the specific
language governing permissions and limitations under the License.

When distributing Covered Code, include this CDDL HEADER in each
file and include the License file at LICENSE.txt.
If applicable, add the following below this CDDL HEADER, with the
fields enclosed by brackets "[]" replaced with your own identifying
information: Portions Copyright [yyyy] [name of copyright owner]

CDDL HEADER END

Copyright (c) 2010, 2018, Oracle and/or its affiliates. All rights reserved.
Portions Copyright (c) 2017-2018, Chris Fraire <cfraire@me.com>.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.opengrok</groupId>
        <artifactId>opengrok-top</artifactId>
        <version>1.1-rc70</version>
    </parent>

    <artifactId>opengrok-tools</artifactId>
    <version>1.1-rc70</version>
    <packaging>pom</packaging>

    <name>OpenGrok tools</name>

    <profiles>
        <profile>
            <id>not-windows</id>
            <activation>
                <os>
                    <family>!windows</family>
                </os>
            </activation>
            <properties>
                <python3Command>python3</python3Command>
                <pythonEnvBin>env/bin</pythonEnvBin>
            </properties>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <python3Command>python</python3Command>
                <pythonEnvBin>env/Scripts</pythonEnvBin>
                <!-- Tests do not run on Windows because the python code is Unix-specific -->
                <skipTests>true</skipTests>
            </properties>
        </profile>
    </profiles>
    <build>
        <sourceDirectory>src/main/python</sourceDirectory>
        <testSourceDirectory>src/test/python</testSourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>generate-python-package-version</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <!--
                                Use property ${project.version} but delete the "-" (dash) from it
                                and place it into the property ${project.python.package.version}
                             -->
                            <name>project.python.package.version</name>
                            <regex>-rc</regex>
                            <value>${project.version}</value>
                            <replacement>rc</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- copy all the python files to the target directory
                     so we produce the dist and build directories there -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources-python</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/src</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy package resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>MANIFEST.in</include>
                                        <include>README.md</include>
                                        <include>logging.properties.template</include>
                                    </includes>
                                </resource>
                                <!-- replace ${project.python.package.version} in setup.py -->
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>setup.py</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy logging.properties.template to dist</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dist</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>logging.properties.template</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <id>Python flake8</id>
                        <configuration>
                            <executable>flake8</executable>
                            <arguments>
                                <argument>-v</argument>
                                <argument>--exclude=filelock.py,test_command.py,test_commands.py</argument>
                                <argument>${project.build.sourceDirectory}</argument>
                                <argument>setup.py</argument>
                            </arguments>
                            <skip>${skipTests}</skip>
                        </configuration>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate python env</id>
                        <configuration>
                            <executable>${python3Command}</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-m</argument>
                                <argument>venv</argument>
                                <argument>env</argument>
                            </arguments>
                        </configuration>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <!-- needed for 'pip install pylint' to work -->
                        <id>Upgrade pip</id>
                        <configuration>
                            <executable>${pythonEnvBin}/pip3</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory> 
                            <arguments>
                                <argument>install</argument>
                                <argument>--upgrade</argument>
                                <argument>pip</argument>
                            </arguments>
                            <skip>${skipTests}</skip>
                        </configuration>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-package</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${pythonEnvBin}/python</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>setup.py</argument>
                                <argument>sdist</argument>
								<argument>--formats</argument>
								<argument>gztar</argument>
                            </arguments>
                        </configuration>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>python-test-install</id>
                        <configuration>
                            <executable>${pythonEnvBin}/python</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>setup.py</argument>
                                <argument>install</argument>
                            </arguments>
                            <skip>${skipTests}</skip>
                        </configuration>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>Install Python lint</id>
                        <configuration>
                            <executable>${project.build.directory}/env/bin/pip3</executable>
                            <arguments>
                                <argument>install</argument>
                                <argument>pylint</argument>
                            </arguments>
                            <skip>${skipTests}</skip>
                        </configuration>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>Python lint</id>
                        <configuration>
                            <executable>env/bin/pylint</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>-E</argument>
                                <argument>${project.build.sourceDirectory}/opengrok_tools</argument>
                                <argument>${project.build.directory}/setup.py</argument>
                            </arguments>
                            <skip>${skipTests}</skip>
                        </configuration>
                        <phase>verify</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>python-test</id>
                        <configuration>
                            <executable>env/bin/python</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>setup.py</argument>
                                <argument>test</argument>
                            </arguments>
                            <skip>${skipTests}</skip>
                        </configuration>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
